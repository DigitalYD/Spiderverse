# Use Ubuntu 22.04 base image for ARM64 architecture (Raspberry Pi 4)
FROM arm64v8/ubuntu:22.04

# Avoid prompts from apt
ENV DEBIAN_FRONTEND=noninteractive

# Set locale
RUN apt-get update && apt-get install -y locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
ENV LANG=en_US.UTF-8

# Add the ROS2 apt repository
RUN apt-get update && apt-get install -y software-properties-common curl gnupg2 lsb-release && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

# Install ROS2 Humble and dependencies
RUN apt-get update && apt-get install -y \
    ros-humble-ros-base \
    python3-pip \
    python3-colcon-common-extensions \
    python3-rosdep \
    && rm -rf /var/lib/apt/lists/*

# Initialize rosdep
RUN rosdep init && \
    rosdep update

# Install your package dependencies
RUN apt-get update && apt-get install -y \
    ros-humble-cv-bridge \
    python3-opencv \
    && rm -rf /var/lib/apt/lists/*

# Create a ROS workspace
WORKDIR /ros2_ws
RUN mkdir -p /ros2_ws/src

# Copy your package into the workspace
COPY . /ros2_ws/src/realsense_camera/

# Source ROS2 in every new shell
RUN echo "source /opt/ros/humble/setup.bash" >> /root/.bashrc

# Build the workspace
RUN /bin/bash -c '. /opt/ros/humble/setup.bash && \
    colcon build'

# Source the workspace in every new shell
RUN echo "source /ros2_ws/install/setup.bash" >> /root/.bashrc

# Command to source ROS2 and workspace when container starts
CMD ["/bin/bash"]
