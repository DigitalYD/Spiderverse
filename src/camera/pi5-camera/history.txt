 1002  ls
 1003  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1004  ssh-add psc
 1005  eval "$(ssh-agent -s)"
 1006  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1007  ssh-keygen -f "/home/ocean/.ssh/known_hosts" -R "scc122-login.see240009.projects.jetstream-cloud.org"
 1008  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1009  cd Documents/PSC/Jetstream/
 1010  ls
 1011  touch jet-shelf.sh 
 1012  source jet-shelf.sh 
 1013  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1014  touch jet-shelf.sh 
 1015  source jet-shelf.sh 
 1016  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1017  ls
 1018  cd Documents/
 1019  PSc
 1020  cd PSC/
 1021  ls
 1022  cd jet
 1023  cd Jetstream/
 1024  ls
 1025  touch jet-shelf.sh 
 1026  source jet-shelf.sh 
 1027  ls
 1028  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1029  touch jet-shelf.sh 
 1030  source jet-shelf.sh 
 1031  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1032  cd Documents/PSC/Jetstream/
 1033  touch jet-shelf.sh 
 1034  source jet-shelf.sh 
 1035  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1036  nmcl
 1037  ifconfig
 1038  sudo reboot
 1039  cd Documents/PSC/Jetstream/
 1040  touch jet-shelf.sh 
 1041  source jet-shelf.sh 
 1042  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1043  eval  "$(ssh-agent -s)"
 1044  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1045  cd Documents/PSC/Jetstream/
 1046  touch jet-shelf.sh 
 1047  source jet-shelf.sh 
 1048  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1049  cd Documents/
 1050  cd PSC/Jetstream/
 1051  ls
 1052  touch jet-shelf.sh 
 1053  source jet-shelf.sh 
 1054  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1055  cd Documents/
 1056  cd PSC/Jetstream/
 1057  touch jet-shelf.sh 
 1058  source jet-shelf.sh 
 1059  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1060  eval  "$(ssh-agent -s)"
 1061  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1062  nano message.txt
 1063  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1064  cd Documents/PSC/Jetstream/
 1065  ls
 1066  touch jet-shelf.sh 
 1067  source jet-shelf.sh 
 1068  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1069  cd Documents/PSC/Jetstream/
 1070  touch jet-shelf.sh 
 1071  source jet-shelf.sh 
 1072  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1073  cd Documents/PSC/Jetstream/
 1074  touch jet-shelf.sh 
 1075  source jet-shelf.sh 
 1076  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1077  touch jet-shelf.sh 
 1078  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1079  source jet-shelf.sh 
 1080  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1081  cd Documents/PSC/Jetstream/
 1082  ls
 1083  touch psc
 1084  touch jet-shelf.sh 
 1085  source jet-shelf.sh 
 1086  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1087  openstack server list
 1088  eval "$(ssh-agent -s)"
 1089  openstack server list
 1090  cd 
 1091  ls
 1092  cd Do
 1093  cd Documents/
 1094  s
 1095  ls
 1096  cd ..
 1097  cd Com
 1098  cd comp/
 1099  ;s
 1100  ls
 1101  cd
 1102  ls
 1103  cd Do
 1104  cd Dow
 1105  cd Downloads/
 1106  ls
 1107  cd
 1108  cd Documents/
 1109  ls
 1110  ls  | grep *.txt
 1111  cd
 1112  sudo find / -type f -name "*.txt"
 1113  find / -type f -name "*.txt" -mmin -60
 1114  grep -rl "peng" /
 1115  grep -rl "hi Dr. Peng" /
 1116  cd Documents/
 1117  grep -rl "hi Dr. Peng" /
 1118  cd PSC/Jetstream/
 1119  touch jet-shelf.sh 
 1120  source jet-shelf.sh 
 1121  ls
 1122  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1123  cd Documents/PSC/Jetstream/
 1124  source jet-shelf.sh 
 1125  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1126  source ~/Documents/PSC/Jetstream/jet-shelf.sh 
 1127  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1128  cd Documents/PSC/Jetstream/
 1129  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1130  cd -
 1131  ls
 1132  cd Documents/PSC/Jetstream/
 1133  ls
 1134  touch jet-shelf.sh 
 1135  source jet-shelf.sh 
 1136  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1137  cd Documents/PSC/Jetstream/
 1138  source jet-shelf.sh 
 1139  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1140  cd Documents/PSC/Jetstream/
 1141  ls
 1142  touch jet-shelf.sh 
 1143  source jet-shelf.sh 
 1144  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1145  cd Documents/PSC/Jetstream/
 1146  source jet-shelf.sh 
 1147  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1148  cd Documents/PSC/Jetstream/
 1149  source jet-shelf.sh 
 1150  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1151  cd Documents/PSC/Jetstream/
 1152  source jet-shelf.sh 
 1153  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1154  source jet-shelf.sh 
 1155  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1156  cd Documents/PSC/Jetstream/
 1157  source jet-shelf.sh 
 1158  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1159  cd Documents/PSC/Jetstream/
 1160  ls
 1161  source jet-shelf.sh 
 1162  ssh -i psc rocky@scc122-login.see240009.projects.jetstream-cloud.org
 1163  sudo reboot
 1164  reboot
 1165  ping ras.local
 1166  ssh door-pi@192.168.1.23
 1167  cd /etc/
 1168  ls
 1169  cd .ssh
 1170  cd ssh
 1171  ls
 1172  cd ..
 1173  cd 
 1174  cd .ssh/
 1175  ls
 1176  sudo nano known_hosts
 1177  vim known_hosts
 1178  vim known_hosts.old 
 1179  ssh-keygen -f /home/ocean/.ssh/known_hosts -R 192.168.1.23
 1180  cd
 1181  ssh door-pi@192.168.1.23
 1182  git status
 1183  git add .
 1184  git commit -m "updating the instructions for the door"
 1185  git push
 1186  ssh door-pi@192.168.1.23
 1187  ssh iron@192.168.0.46
 1188  ssh -X iron@192.168.0.46
 1189  git status
 1190  git add .
 1191  git commit -m "updating instructions"
 1192  git push
 1193  cd ..
 1194  ls
 1195  cd Projects/
 1196  ls
 1197  git status
 1198  cd ..
 1199  git clone git@github.com:DigitalYD/BLE-Car.git
 1200  ls
 1201  cd BLE-
 1202  cd BLE-Car/
 1203  dmesg | grep tty
 1204  sudo dmesg | grep tty
 1205  ls -l /dev/ttyS31
 1206  history
 1207  ssh iron@192.168.0.46
 1208  vscode
 1209  code
 1210  sudo apt-get update && sudo apt-get upgrade -y
 1211  source /opt/ros/humble/setup.bash
 1212  ros2 run demo_nodes_py listener
 1213  source /opt/ros/humble/setup.bash
 1214  ros2 run demo_nodes_py listener
 1215  source /opt/ros/humble/setup.bash
 1216  ros2 run demo_nodes_py listener
 1217  ssh iron@192.168.0.50
 1218  ssh -X iron@192.168.0.50
 1219  ros2 doctor
 1220  echo $ROS_DISTRO
 1221  ls /opt/ros/
 1222  cd opt
 1223  ls
 1224  cd ..
 1225  ls
 1226  cd ..
 1227  ls
 1228  cd opt/
 1229  ls
 1230  cd containerd/
 1231  ls
 1232  sudo ls
 1233  cd 
 1234  ls
 1235  cat PSC
 1236  ls
 1237  cd comp/
 1238  ls
 1239  rmdir comp
 1240  ls
 1241  cd ..
 1242  rmdir comp
 1243  ls
 1244  mv jetstream.pub Documents/SC24/
 1245  mv jetstream Documents/SC24/
 1246  ls
 1247  mv PSC Documents/PSC/
 1248  ls
 1249  cat djcart 
 1250  clear
 1251  mv djcart Documents/PSC/
 1252  mv djcart Documents/PSC/djcart/
 1253  ls
 1254  clear
 1255  locale  # check for UTF-8
 1256  sudo apt update && sudo apt install locales
 1257  sudo locale-gen en_US en_US.UTF-8
 1258  sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
 1259  export LANG=en_US.UTF-8
 1260  locale  # verify settings
 1261  sudo apt install software-properties-common
 1262  sudo add-apt-repository universe
 1263  sudo apt isntall software-properties-common
 1264  sudo apt install software-properties-common
 1265  sudo add-apt-repository universe
 1266  clear
 1267  sudo add-apt-repository universe
 1268  sudo nano /etc/apt/sources.list.d/archive_uri-https_download_docker_com_linux_ubuntu-jammy.list
 1269  sudo nano /etc/apt/sources.list.d/docker.list
 1270  sudo apt-get update
 1271  sudo nano /etc/apt/sources.list.d/brave-browser-release.list
 1272  sudo apt-get update
 1273  sudo add-apt-repository universe
 1274  sudo apt update && sudo apt install curl -y
 1275  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
 1276  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
 1277  sudo apt update
 1278  sudo apt upgrade
 1279  sudo apt install ros-humble-desktop
 1280  # Replace ".bash" with your shell if you're not using bash
 1281  # Possible values are: setup.bash, setup.sh, setup.zsh
 1282  source /opt/ros/humble/setup.bash
 1283  ros2 run demo_nodes_cpp talker
 1284  source /opt/ros/humble/setup.bash
 1285  ros2 run demo_nodes_cpp talker
 1286  clear
 1287  ping 192.168.0.50
 1288  ssh-copy-id iron@192.168.0.50
 1289  sudo nano .ssh/known_hosts
 1290  sudo nano .ssh/known_hosts.old 
 1291  ssh iron@192.168.0.50
 1292  sudo nano .ssh/known_hosts.old 
 1293  sudo rm .ssh/known_hosts
 1294  sudo rm .ssh/known_hosts.old 
 1295  ls .ssh/
 1296  ssh-copy-id iron@192.168.0.50
 1297  ls
 1298  clear
 1299  ls
 1300  cd  .ssh/
 1301  ls
 1302  ssh-keygen
 1303  ls
 1304  man ssh
 1305  cd
 1306  ssh iron@192.168.0.50
 1307  ifconfig
 1308  chmod 700 .ssh/
 1309  scp iron@192.168.0.50:~/.ssh/server-key.pub .
 1310  ssh-copy-id iron@192.168.0.50
 1311  sudo apt install magic-wormhole -y
 1312  wormhole receive <code>
 1313  wormhole receive <6-nebula-southward>
 1314  wormhole receive 6-nebula-southward
 1315  python3 --version
 1316  wormhole receive 6-nebula-southward
 1317  [200~sudo apt remove magic-wormhole
 1318  pip uninstall magic-wormhole~
 1319  sudo apt remove magic-wormhole
 1320  pip uninstall magic-wormhole
 1321  sudo apt install python3-pip python3-attr
 1322  pip install --user attrs magic-wormhole
 1323  wormhole receive 6-nebula-southward
 1324  pip uninstall magic-wormhole
 1325  sudo apt-get install magic-wormhole
 1326  wormhole receive 6-nebula-southward
 1327  ls
 1328  cd Documents/
 1329  ls
 1330  ssh iron@192.168.0.50
 1331  cd
 1332  cd .ssh/
 1333  ls
 1334  rm bot-key
 1335  tm bot-key.pub 
 1336  rm bot-key.pub 
 1337  ssh-keygen
 1338  ls
 1339  python3 -m -m http.server 800
 1340  python3 -m http.server 800
 1341  python3 -m http.server 8000
 1342  eval $(ssh-agent)
 1343  ssh-add bot-key
 1344  python3 -m http.server 8000
 1345  ifconfig
 1346  python3 -m http.server 8000
 1347  ssh iron@192.168.0.50
 1348  ssh -v iron@192.168.0.50
 1349  cd
 1350  ssh -v iron@192.168.0.50
 1351  cd .ssh
 1352  ls
 1353  cat known_hosts 
 1354  ssh-add bot-key
 1355  ls
 1356  rm known_hosts 
 1357  cd 
 1358  ssh -v iron@192.168.0.50
 1359  ssh -v spider@192.168.0.50
 1360  ssh iron@192.168.0.50
 1361  eval $(ssh-agent)
 1362  ssh-add .ssh/bot-key
 1363  ssh iron@192.168.0.50
 1364  ssh-add .ssh/bot-key
 1365  ssh -v spider@192.168.0.50
 1366  ssh-copy-id -i ~/.ssh/bot-key.pub -p 22 iron@192.168.0.50
 1367  python3 -m http.server 8000
 1368  cd .ssh/
 1369  ls
 1370  python3 -m http.server 8000
 1371  ssh iron@192.168.0.50
 1372  ls
 1373  cat known_hosts 
 1374  nano known_hosts 
 1375  rm known_hosts 
 1376  ls
 1377  ssh-add bot-key
 1378  ls
 1379  ssh iron@192.168.0.50
 1380  ls
 1381  cat bot-key.pub 
 1382  ssh iron@192.168.0.50
 1383  ssh -X iron@192.168.0.50
 1384  reboot
 1385  ssh -X iron@192.168.0.50
 1386  source /opt/ros/humble/setup.bash 
 1387  ros2 launch realsense2_camera rs_launch.py
 1388  realsense-viewer   # Test SDK installation
 1389  sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE
 1390  sudo add-apt-repository "deb https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main"
 1391  sudo apt update
 1392  sudo apt install librealsense2-dkms librealsense2-utils librealsense2-dev
 1393  sudo apt install ros-humble-realsense2-camera
 1394  realsense-viewer 
 1395  sudo usermod -a -G plugdev $USER
 1396  sudo udevadm control --reload-rules && sudo udevadm trigger
 1397  sudo reboot
 1398  ssh -X iron@192.168.0.50
 1399  ls
 1400  source /opt/ros/humble/setup.bash 
 1401  realsense-viewer 
 1402  ros2 launch realsense2_camera rs_launch.py  
 1403  ls
 1404  cd Do
 1405  cd Documents/
 1406  ls
 1407  python3 Sensing.py 
 1408  echo $VIRTUAL_ENV
 1409  python -m venv ros-cam
 1410  python3 -m venv ros-cam
 1411  source ros-cam/bin/activate
 1412  pip3 install pyrealsense2
 1413  pip3 install opencv-python
 1414  python3 --version
 1415  python3 Sense
 1416  python3 Sensing.py 
 1417  ssh -x iron@192.168.0.50
 1418  exit
 1419  ls
 1420  cd Documents/
 1421  ls
 1422  cd
 1423  ls
 1424  ssh -X iron@192.168.0.50
 1425  sudo docker run hello_word
 1426  sudo docker run hello-word
 1427  sudo docker run hello_word
 1428  sudo reboot
 1429  for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
 1430  ls
 1431  for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
 1432  # Add Docker's official GPG key:
 1433  sudo apt-get update
 1434  sudo apt-get install ca-certificates curl
 1435  sudo install -m 0755 -d /etc/apt/keyrings
 1436  sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
 1437  sudo chmod a+r /etc/apt/keyrings/docker.asc
 1438  # Add the repository to Apt sources:
 1439  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
 1440    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" |   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 1441  sudo apt-get update
 1442  sudo apt-get remove docker docker-engine docker.io containerd runc
 1443  cat /etc/apt/trusted.gpg
 1444  sudo rm /etc/apt/trusted.gpg
 1445  sudo mkdir -p /etc/apt/keyrings
 1446  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
 1447  # Add Docker's official GPG key:
 1448  sudo apt-get update
 1449  sudo apt-get install ca-certificates curl
 1450  sudo install -m 0755 -d /etc/apt/keyrings
 1451  sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
 1452  sudo chmod a+r /etc/apt/keyrings/docker.asc
 1453  # Add the repository to Apt sources:
 1454  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
 1455    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" |   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 1456  sudo apt-get update
 1457  sudo apt-get install     ca-certificates     curl     gnupg     lsb-release
 1458  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
 1459    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 1460  sudo mkdir -p /etc/apt/keyrings
 1461  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
 1462  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
 1463    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 1464  sudo apt-get update
 1465  ls
 1466  sudo rm /etc/apt/sources.list.d/librealsense.list   # if it exists
 1467  # Add the server's public key
 1468  sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE
 1469  # Add the repository
 1470  echo 'deb https://librealsense.intel.com/Debian/apt-repo ubuntu-jammy main' | sudo tee /etc/apt/sources.list.d/librealsense.list
 1471  sudo apt update
 1472  vi /etc/apt/trusted.gpg
 1473  sudo vi /etc/apt/trusted.gpg
 1474  sudo mkdir -p /etc/apt/keyrings
 1475  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
 1476  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
 1477    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 1478  sudo apt-get update
 1479  curl -fsSL https://librealsense.intel.com/Debian/librealsense.pgp | sudo apt-key add -
 1480  sudo apt update
 1481  sudo rm /etc/apt/sources.list.d/librealsense.list
 1482  # Register the server's public key
 1483  sudo mkdir -p /etc/apt/keyrings
 1484  curl -sSf https://raw.githubusercontent.com/IntelRealSense/librealsense/master/doc/distribution/ubuntu-server-public.key | sudo gpg --dearmor -o /etc/apt/keyrings/librealsense.gpg
 1485  # Add the server to the list of repositories
 1486  echo "deb [signed-by=/etc/apt/keyrings/librealsense.gpg] https://raw.githubusercontent.com/IntelRealSense/librealsense/master/doc/distribution jammy main" | sudo tee /etc/apt/sources.list.d/librealsense.list
 1487  sudo apt update
 1488  sudo apt install librealsense2-dkms librealsense2-utils librealsense2-dev
 1489  source /opt/ros/humble/setup.bash 
 1490  sudo apt update
 1491  sudo apt install librealsense2-dkms librealsense2-utils librealsense2-dev
 1492  sudo apt install ros-humble-librealsense2*
 1493  sudo apt update
 1494  sudo apt install librealsense2-dkms librealsense2-utils librealsense2-dev
 1495  sudo mkdir -p /etc/apt/keyrings
 1496  curl -sSf https://librealsense.intel.com/Debian/librealsense.pgp | sudo tee /etc/apt/keyrings/librealsense.pgp > /dev/null
 1497  sudo apt-get install apt-transport-https
 1498  echo "deb [signed-by=/etc/apt/keyrings/librealsense.pgp] https://librealsense.intel.com/Debian/apt-repo `lsb_release -cs` main" | sudo tee /etc/apt/sources.list.d/librealsense.list
 1499  sudo apt-get update
 1500  realsense-viewer
 1501  sudo rm /etc/apt/sources.list.d/librealsense*
 1502  sudo rm /etc/apt/sources.list.d/archive_uri-https_librealsense*
 1503  sudo rm -rf /var/lib/apt/lists/*
 1504  echo "deb [signed-by=/etc/apt/keyrings/librealsense.gpg] https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/librealsense.list
 1505  sudo apt update
 1506  sudo add-apt-repository --remove "deb https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main" -u
 1507  cd /etc/apt/
 1508  ls
 1509  cd sources.list.d/
 1510  ls
 1511  cat librealsense.list 
 1512  sudo rm /etc/apt/sources.list.d/librealsense*
 1513  sudo rm /etc/apt/sources.list.d/archive_uri-https_librealsense*
 1514  ls
 1515  cd ..
 1516  ls
 1517  cd keyrings/
 1518  ls
 1519  rm librealsense.gpg
 1520  sudo rm -rf /var/lib/apt/lists/*
 1521  ls
 1522  cd ..
 1523  ls
 1524  cd trusted.gpg.d/
 1525  ls
 1526  cd ..
 1527  cd
 1528  sudo mkdir -p /etc/apt/keyrings
 1529  curl -sSf https://librealsense.intel.com/Debian/librealsense.pgp | sudo tee /etc/apt/keyrings/librealsense.pgp > /dev/null
 1530  echo "deb [signed-by=/etc/apt/keyrings/librealsense.pgp] https://librealsense.intel.com/Debian/apt-repo `lsb_release -cs` main" | sudo tee /etc/apt/sources.list.d/librealsense.list
 1531  sudo apt-get update
 1532  ls
 1533  # Add Docker's official GPG key:
 1534  sudo apt-get update
 1535  sudo apt-get install ca-certificates curl
 1536  sudo install -m 0755 -d /etc/apt/keyrings
 1537  sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
 1538  sudo chmod a+r /etc/apt/keyrings/docker.asc
 1539  # Add the repository to Apt sources:
 1540  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
 1541    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" |   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 1542  sudo apt-get update
 1543  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
 1544  sudo docker run hello-world
 1545  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
 1546  sudo docker run hello-world
 1547  docker help --help
 1548  docker run --help
 1549  sudo apt-get update
 1550  sudo apt-get upgrade -y
 1551  sudo docker run hello-world
 1552  docker status
 1553  sudo systemctl start docker
 1554  sudo service docker start
 1555  sudo dockerd
 1556  sudo service --status-all
 1557  sudo service docker start
 1558  systemctl start docker
 1559  sudo journalctl -xeu docker.service
 1560  dpkg -l | grep docker
 1561  sudo apt remove docker docker-engine docker.io containerd runc
 1562  sudo apt update
 1563  sudo apt install -y ca-certificates curl gnupg
 1564  sudo install -m 0755 -d /etc/apt/keyrings
 1565  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
 1566  sudo chmod a+r /etc/apt/keyrings/docker.gpg
 1567  echo   "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
 1568    "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" |   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 1569  sudo apt update
 1570  sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
 1571  sudo docker run hello-world
 1572  docker --version
 1573  sudo systemctl stop docker.service
 1574  sudo systemctl stop docker.socket
 1575  sudo rm -rf /var/lib/docker
 1576  sudo mkdir /var/lib/docker
 1577  sudo cat /etc/docker/daemon.json
 1578  modprobe kvm
 1579  kvm-ok
 1580  sudo apt install cpu-checker
 1581  kvm-ok
 1582  lsmod | grep kvm
 1583  kvm_amd               167936  0
 1584  ccp                   126976  1 kvm_amd
 1585  kvm                  1089536  1 kvm_amd
 1586  irqbypass              16384  1 kvm
 1587  sudo apt install qemu-system-x86
 1588  ls -al /dev/kvm
 1589  sudo usermod -aG kvm $USER
 1590  sudo apt install gnome-terminal
 1591  sudo apt-get update
 1592  sudo apt-get install ./docker-desktop-amd64.deb
 1593  wget https://desktop.docker.com/linux/main/amd64/docker-desktop-4.27.2-amd64.deb
 1594  sudo apt-get update
 1595  sudo apt-get install -y ca-certificates curl gnupg
 1596  sudo apt-get install ./docker-desktop-4.27.2-amd64.deb
 1597  systemctl --user start docker-desktop
 1598  sudo apt-get install ./docker-desktop-4.27.2-amd64.deb
 1599  docker compose version
 1600  Docker Compose version v2.29.1
 1601  docker --version
 1602  Docker version 27.1.1, build 6312585
 1603  docker version
 1604  Client: 
 1605  <...>
 1606  docker version
 1607  systemctl --user enable docker-desktop
 1608  systemctl --user stop docker-desktop
 1609  sudo apt-get install ./docker-desktop-amd64.deb
 1610  systemctl --user start docker-desktop
 1611  sudo apt-get update
 1612  sudo apt-get upgrade -y
 1613  sudo apt-get install pass gnupg2
 1614  gpg --generate-key
 1615  pass init yud50@pitt.edu
 1616  sudo docker run hello-world
 1617  gpasswd -a $USER docker
 1618  sudo gpasswd -a $USER docker
 1619  sudo docker run hello-world
 1620  sudo dockerd
 1621  sudo docker run hello-world
 1622  systemctl start docker.service
 1623  systemctl status
 1624  sudo systemctl status docker.service
 1625  sudo docker run hello-world
 1626  sudo add-apt-repository ppa:obsproject/obs-studio
 1627  sudo apt update
 1628  sudo apt install ffmpeg obs-studio
 1629  /home/ocean/Documents/ros-cam/bin/python /home/ocean/Documents/Sensing.py
 1630  /home/ocean/Documents/ros-cam/bin/python /home/ocean/Documents/main.py
 1631  /home/ocean/Documents/ros-cam/bin/python /home/ocean/Documents/Sensing.py
 1632  /bin/python3 /home/ocean/.vscode/extensions/ms-python.python-2024.22.2-linux-x64/python_files/printEnvVariablesToFile.py /home/ocean/.vscode/extensions/ms-python.python-2024.22.2-linux-x64/python_files/deactivate/bash/envVars.txt
 1633  ls
 1634  rm -rf ros-noetic-docker/
 1635  ls
 1636  git clone https://github.com/docker/welcome-to-docker
 1637  ls
 1638  cd welcome-to-docker/
 1639  ls
 1640  cat Dockerfile 
 1641  ls
 1642  cat MAINTAINERS.md 
 1643  cat package
 1644  cat package.json 
 1645  cd ..
 1646  ls
 1647  Documents/
 1648  ls
 1649  cd Documents/
 1650  ls
 1651  cd ~/.ssh/
 1652  ls
 1653  ssh-keygen 
 1654  cat yunscom
 1655  cat yunscom.pub 
 1656  ssh-add yunscom
 1657  eval $(ssh-agent -s)
 1658  cd ~/Documents/
 1659  ls
 1660  git clone git@github.com:DigitalYD/Spiderverse.git
 1661  eval $(ssh-agent -s)
 1662  ssh-add ~/.ssh/yunscom.pub 
 1663  ssh-add ~/.ssh/yunscom
 1664  git clone git@github.com:DigitalYD/Spiderverse.git
 1665  ls
 1666  cd Spiderverse/
 1667  ls
 1668  git checkout 
 1669  git branch
 1670  ssh -x iron@192.168.0.50
 1671  history
 1672  ssh -X iron@192.168.0.50
 1673  cd 
 1674  ssh-add ~/.ssh/bot-key
 1675  ssh -X iron@192.168.0.50
 1676  reboot
 1677  ssh -X iron@192.168.0.76
 1678  ssh -X iron@192.168.0.50
 1679  ls
 1680  ls .ssh/
 1681  eval $(ssh-agent -s)
 1682  ssh-add .ssh/bot-key
 1683  ssh -X iron@192.168.0.50
 1684  ping 192.168.0.50
 1685  ssh -X iron@192.168.0.50
 1686  ssh -X iron@192.168.0.48
 1687  ssh -X gold@192.168.0.234
 1688  cd .ssh/
 1689  ls
 1690  ssh-keygen 
 1691  ls
 1692  cd
 1693  cd .ssh/
 1694  ls
 1695  ssh-copy-id gold@192.168.0.34
 1696  ssh-copy-id gold@192.168.0.234
 1697  ssh-copy-id gold@192.168.0.34
 1698  ssh -X gold@192.168.0.234
 1699  ls
 1700  cat known_hosts
 1701  vi known_hosts
 1702  vi known_hosts.old 
 1703  vi known_hosts
 1704  ssh-copy-id gold@192.168.0.34
 1705  ssh-copy-id gold@192.168.0.234
 1706  ssh-copy-id -i rasp-bot.pub gold@192.168.0.234
 1707  ping gold@192.168.0.234
 1708  ping 192.168.0.234
 1709  ssh -X gold@192.168.0.234
 1710  cd
 1711  ssh-copy-id -i ~/.ssh/rasp-bot.pub -o IdentitiesOnly=yes gold@192.168.0.234
 1712  ssh -X gold@192.168.0.234
 1713  cd Downloads/
 1714  ls
 1715  sudo apt install ./code-server_4.96.4_amd64.deb 
 1716  # Add the code-server repository
 1717  curl -fsSL https://code-server.dev/install.sh | sh
 1718  sudo systemctl enable --now code-server@$USER
 1719  [200~sudo chmod 644 ./code-server_4.96.4_amd64.deb
 1720  # Then try to install
 1721  sudo chmod 644 ./code-server_4.96.4_amd64.deb
 1722  # Then try to install
 1723  sudo dpkg -i ./code-server_4.96.4_amd64.deb
 1724  sudo systemctl start code-server@$USER
 1725  sudo systemctl enable --now code-server@$USER
 1726  sudo apt install nginx -y
 1727  sudo systemctl start nginx
 1728  sudo systemctl enable nginx
 1729  sudo systemctl start nginx
 1730  sudo systemctl enable nginx
 1731  sudo systemctl status nginx
 1732  sudo apt install nano -y
 1733  sudo nano /etc/nginx/sites-available/code-server
 1734  sudo ln -s ../sites-available/code-server /etc/nginx/sites-enabled/code-server
 1735  sudo systemctl restart nginx
 1736  sudo systemctl restart code-server
 1737  sudo ufw allow 80
 1738  sudo ufw allow 443
 1739  sudo systemctl restart code-server
 1740  sudo nano /etc/nginx/sites-available/code-server
 1741  # Stop any running services
 1742  sudo systemctl stop nginx
 1743  sudo systemctl stop code-server@$USER
 1744  # Remove code-server
 1745  sudo apt remove code-server -y
 1746  sudo apt remove nginx -y
 1747  # Remove all configuration files and data
 1748  rm -rf ~/.local/share/code-server ~/.config/code-server
 1749  rm -rf ~/.local/lib/code-server-*
 1750  # Remove nginx configurations if they exist
 1751  sudo rm -f /etc/nginx/sites-enabled/code-server
 1752  sudo rm -f /etc/nginx/sites-available/code-server
 1753  # Clean up any remaining packages
 1754  sudo apt autoremove -y
 1755  sudo apt clean
 1756  sudo apt-get update
 1757  sudo apt-get install python3-lgpio
 1758  docker stop $(docker ps -a -q)
 1759  docker ps
 1760  docker rm $(docker ps -a -q)
 1761  docker ps
 1762  docker images
 1763  docker rm $(docker ps -a -q)
 1764  docker stop $(docker ps -a -q)
 1765  docker rm $(docker ps -a -q)
 1766  ssh yud50@bridges2.psc.edu
 1767  eval $(ssh-agent -s)
 1768  ssh-add ~/.ssh/psc
 1769  ssh yud50@bridges2.psc.edu
 1770  ls
 1771  cd Do
 1772  cd Documents/
 1773  ls
 1774  cd PSC/
 1775  ls
 1776  clear
 1777  ls
 1778  eval $(ssh-agent -s)
 1779  cat PSc
 1780  cat PSC 
 1781  ls
 1782  mv PSC PSC.c
 1783  cd ..
 1784  ls
 1785  cd SC
 1786  cd SC24/
 1787  ls
 1788  cd ..
 1789  ls
 1790  cd ~/.ssh/
 1791  l;s
 1792  ssh-add psc
 1793  ssh ydong5@h2p.psc.edu
 1794  ssh ydong5@bridges2.psc.edu
 1795  ssh -X gold@192.168.0.234
 1796  docker pull osrf/ros2
 1797  docker version
 1798  docker pull 
 1799  docker pull osrf/ros2
 1800  sudo systemctl docker
 1801  sudo systemctl docker status
 1802  sudo systemctl status docker 
 1803  sudo systemctl enable docker
 1804  sudo systemctl start docker
 1805  docker pull osrf/ros2
 1806  docker pull osrf/ros:jazzy-desktop-full
 1807  docker run osrf/ros:jazzy-desktop-full 
 1808  ros2 --version
 1809  ls
 1810  docker status
 1811  docker run osrf/ros:jazzy-desktop-full 
 1812  docker run -it osrf/ros:jazzy-desktop-full bash
 1813  history
 1814  ssh -X iron@192.168.0.50
 1815  nmap -sn 192.168.0.0/24
 1816  ping spider.local
 1817  ssh -X iron@192.168.0.234
 1818  sudo systemctl status ssh
 1819  sudo systemctl enable ssh
 1820  sudo systemctl start ssh
 1821  ssh -X iron@192.168.0.234
 1822  ping spider.local
 1823  ssh -X iron@192.168.0.48
 1824  ssh -X gold@192.168.0.234
 1825  ssh -X iron@192.168.0.50
 1826  ssh -X iron@192.168.0.48
 1827  sudo apt install gnome-tweaks
 1828  gnome
 1829  gnome-tweaks 
 1830  gsettings set org.gnome.desktop.wm.keybindings switch-applications "[]"
 1831  gsettings set org.gnome.desktop.wm.keybindings switch-windows "['<Alt>Tab']"
 1832  reboot
 1833  /bin/python3 /home/ocean/.vscode/extensions/ms-python.python-2024.22.2-linux-x64/python_files/printEnvVariablesToFile.py /home/ocean/.vscode/extensions/ms-python.python-2024.22.2-linux-x64/python_files/deactivate/bash/envVars.txt
 1834  eval $(ssh-agent -s)
 1835  ssh-add ~/.ssh/psc
 1836  ssh -x yud50@bridges2.psc.edu
 1837  git status
 1838  git add .
 1839  git commint -m "update sponsors"
 1840  git commit -m "update sponsors"
 1841  git push
 1842  ls
 1843  eval $(ssh-agent -s)
 1844  ssh-add ~/.ssh/rasp-bot
 1845  ssh -x iron@192.168.0.48
 1846  ssh -X iron@192.168.0.48
 1847  ssh-add ~/.ssh/yunscom
 1848  ssh -X iron@192.168.0.48
 1849  ls
 1850  cd Documents/
 1851  ls
 1852  cd
 1853  ssh iron@192.168.0.48
 1854  eval $(ssh-agent -s)
 1855  ssh-add ~/.ssh/bot-key
 1856  ssh -X iron@192.168.0.48
 1857  ping iron.local
 1858  ping spider.local
 1859  ssh -X iron@192.168.0.48
 1860  ping man.local
 1861  ssh -X iron@192.168.0.48
 1862  reboot
 1863  source /opt/ros/humble/setup.bash 
 1864  export ROS_DISCOVERY_SERVER=127.0.0.1:11811
 1865  ros2 run demo_nodes_cpp talker --ros-args --remap __node:=talker_discovery_server
 1866  ros2 run demo_nodes_cpp talker --ros-args --remap __node:=simple_talker
 1867  apt search fastdds
 1868  export ROS_DISCOVERY_SERVER=127.0.0.1:11811
 1869  ros2 run demo_nodes_cpp talker --ros-args --remap __node:=talker_discovery_server
 1870  ros2 launch realsense2_camera rs_launch.py
 1871  ros2 launch realsense2_camera rs_launch.py depth_module.depth_profile:=1280x720x30 pointcloud.enable:=true
 1872  ros2 topic list
 1873  ros2 run rqt_image_view rqt_image_view
 1874  ssh -X king@192.168.0.31
 1875  eval $(ssh-agent -s)
 1876  ssh-add .ssh/rasp-bot
 1877  ssh -X iron@192.168.0.48
 1878  ssh-add .ssh/bot-key
 1879  ssh -X iron@192.168.0.48
 1880  # First source ROS2
 1881  source /opt/ros/humble/setup.bash
 1882  # Run image viewer
 1883  ros2 run rqt_image_view rqt_image_view
 1884  # First set ROS domain
 1885  export ROS_DOMAIN_ID=0
 1886  export ROS_LOCALHOST_ONLY=0
 1887  # Then run image viewer
 1888  ros2 run rqt_image_view rqt_image_view
 1889  ssh -X iron@192.168.0.48
 1890  source /opt/ros/humble/setup.bash 
 1891  ros2 run rqt_image_view rqt_image_view
 1892  # Set ROS domain
 1893  export ROS_DOMAIN_ID=0
 1894  export ROS_LOCALHOST_ONLY=0
 1895  192.168.0.50 king-raspberrypi  # Use your Pi's actual IP
 1896  # View the camera feed
 1897  ros2 run rqt_image_view rqt_image_view
 1898  ssh -X iron@192.168.0.48
 1899  source /opt/ros/humble/setup.bash 
 1900  lsusb
 1901  # Add Pi4's IP to hosts file
 1902  sudo vim /etc/hosts
 1903  vim ~/.bashrc 
 1904  ros2 topic list
 1905  # Start image viewer
 1906  ros2 run rqt_image_view rqt_image_view
 1907  reboot
 1908  cd Downloads/
 1909  ls
 1910  unzip matlab_R2024b_Linux.zip -d ./matlab_R2024b_Linux
 1911  cd ./matlab_R2024b_Linux
 1912  xhost +SI:localuser:root
 1913  sudo -H ./install
 1914  xhost -SI:localuser:root
 1915  /usr/local/MATLAB/R2024b/bin/matlab
 1916  reboot
 1917  gsettings set org.gnome.desktop.wm.keybindings switch-applications "[]"
 1918  gsettings set org.gnome.desktop.wm.keybindings switch-applications-backward "[]"
 1919  gsettings set org.gnome.desktop.wm.keybindings switch-windows "['<Alt>Tab']"
 1920  gsettings set org.gnome.desktop.wm.keybindings switch-windows-backward "['<Shift><Alt>Tab']"
 1921  gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']"
 1922  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name "Launch Terminal"
 1923  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command "gnome-terminal"
 1924  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding "<Alt>t"
 1925  realsense-viewer 
 1926  git pull
 1927  git fetch
 1928  cd Documents/roldan/
 1929  ls
 1930  cd
 1931  ls
 1932  cd nvidia-jetson/
 1933  ls
 1934  tar -xf Jetson_Linux_R36.4.3_aarch64.tbz2 -C ${HOME}/nvidia-jetson/
 1935  sudo tar -xf Jetson_Linux_R36.4.3_aarch64.tbz2 -C ${HOME}/nvidia-jetson/
 1936  ls
 1937  sudo tar -xpf Jetson_Linux_R36.4.3_aarch64.tbz2 -C ${HOME}/nvidia-jetson/
 1938  ls
 1939  cd ~/Documents/ro
 1940  cd ~/Documents/roldan/
 1941  ls
 1942  tar -xvf Jetpack_6_2_Orin_NX_NANO_v1.tar.xz 
 1943  ls
 1944  tar -xvf kernel_out.tar.xz 
 1945  ls
 1946  cd kernel_out/
 1947  ls
 1948  cd Do
 1949  cd Downloads/
 1950  ls
 1951  cd Jetpack_6_2_Orin_NX_NANO_v1/
 1952  ls
 1953  clear
 1954  cat How_to_flash_Orin_NX_Nano.txt 
 1955  sudo modprobe nfsd
 1956  ls /lib/modules/$(uname -r)/kernel/fs/nfs*
 1957  uname -a
 1958  grep NFS /boot/config-$(uname -r)
 1959  sudo apt-get update
 1960  sudo apt-get install --reinstall nfs-kernel-server nfs-common
 1961  sudo systemctl enable auth-rpgcss-module.service
 1962  sudo systemctl enable nfs-idmapd.service
 1963  sudo systemctl enable nfs-utils.service
 1964  sudo systemctl enable proc-fs-nfsd.mount
 1965  sudo systemctl enable rpc-gssd.service
 1966  sudo systemctl enable rpc-svcgssd.service
 1967  sudo systemctl enable rpc-pipefs.target
 1968  sudo systemctl enable var-lib-nfs-rpc_pipefs.mount
 1969  sudo systemctl start rpcbind
 1970  sudo systemctl start auth-rpgcss-module.service
 1971  sudo systemctl start nfs-idmapd.service
 1972  sudo systemctl start nfs-utils.service
 1973  sudo systemctl start proc-fs-nfsd.mount
 1974  sudo systemctl start nfs-server
 1975  cd Documents/roldan/
 1976  ls
 1977  cd kernel_out/
 1978  ls
 1979  cd bootloader/
 1980  ls
 1981  cd ..
 1982  ls
 1983  cd kernel_out/
 1984  mount fstype=rpc_pipefs, mount fstype=nfsd,
 1985  sudo systemctl stop nfs-server
 1986  sudo systemctl stop nfs-kernel-server
 1987  sudo systemctl stop rpcbind
 1988  sudo apt-get remove --purge nfs-kernel-server nfs-common rpcbind
 1989  sudo apt-get autoremove
 1990  sudo rm -rf /etc/exports
 1991  sudo rm -rf /etc/default/nfs-*
 1992  sudo apt-get update
 1993  sudo apt-get install nfs-kernel-server nfs-common rpcbind
 1994  sudo systemctl status nfs-server
 1995  sudo systemctl status rpcbind
 1996  source /opt/ros/humble/setup.bash
 1997  ls
 1998  ros2 run rqt_image_view rqt_image_view
 1999  source /opt/ros/humble/setup.bash 
 2000  ros2 run rqt_image_view rqt_image_view
 2001  history > history.txt
